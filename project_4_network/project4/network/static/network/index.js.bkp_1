async function fetchPosts() {
	const response = await fetch("/posts/");
	const posts = await response.json();
	return posts;
}

function NewPost({ setPosts }) {
	async function handleFormSubmit(event) {
		event.preventDefault();

		//const content = event.target.elements.new_post.value;
		const content = document.querySelector("#content").value;
		console.log(content);

		async function getOwnerId() {
			const response = await fetch("/me/");
			const me = await response.json();
			return me.id;
		}

		const ownerId = await getOwnerId();

		//async function() {

		//}
		fetch("/posts/", {
			method: "POST",
			headers: {
				"Content-Type": "application/json",
				"X-CSRFToken": document.cookie.split("=")[1],
			},
			body: JSON.stringify({
				owner: ownerId,
				content: content
			})
		});

		const allPosts = await fetchPosts();
		setPosts(allPosts);
		event.target.elements.new_post.value = "";
	}

    return (
		<div>
			<div className="card">
				<div className="container-fluid">
					<form className="form-group" onSubmit={handleFormSubmit}>
						<label className="form-label mt-2" htmlFor="new_post"><h4>New Post</h4></label>
						<textarea className="form-control" id="content" type="textarea" name="new_post" rows="3"></textarea>
						<button className="btn btn-primary mt-2 mb-2" type="submit">Post</button>
					</form>
				</div>
			</div>
			<hr />
		</div>
    );
}

function Post({post}) {
	return (
		<div className="container-fluid card mt-2">
			<h5 className="mt-4"><strong>{post.owner_name}</strong></h5>
			<p>{post.content}</p>
			<p style={{color: "grey"}}>{post.created_at}</p>
		</div>
	)
}

function AllPosts({posts}) {
	return posts.map(post => <Post key={post.id} post={post} />);
}


function App() {
	const [posts, setPosts] = React.useState([]);

	React.useEffect(() => {
		fetch("/posts/")
		.then(response => response.json())
		.then(data => {
			setPosts(data);
		})
	}, []);

	return (
		<div>
			<NewPost setPosts={setPosts}/>
			<AllPosts posts={posts}/>
		</div>
	)
}

const root = ReactDOM.createRoot(document.querySelector("#root"));
root.render(
	<React.StrictMode>
		<App />
	</React.StrictMode>
)
